import {
    FETCH_BOOK_START,
    FETCH_BOOK_SUCCESS,
    FETCH_BOOK_FAILURE,
    LOAD_MORE_BOOK_START,
    LOAD_MORE_BOOK_SUCCESS,
    LOAD_MORE_BOOK_FAILURE,
    FETCH_BOOKS_BY_ID_START,
    FETCH_BOOKS_BY_ID_SUCCESS,
    FETCH_BOOKS_BY_ID_FAILURE
} from 'actionTypes'

import {getRenderedBookLength} from 'selectors'

import {
    fetchBook as fetchBookApi,
    loadMoreBook as loadMoreBookApi,
    fetchBooksById as fetchBooksByIdApi
} from 'api'


export  const fetchBook = () => async dispatch => {
    dispatch({type: FETCH_BOOK_START})

    try {
        const  book = await fetchBookApi()
        dispatch({
            type: FETCH_BOOK_SUCCESS,
            payload: book
        })
    }catch (err) {
       dispatch({
           type: FETCH_BOOK_FAILURE,
           payload: err,
           error: true

       })
    }
}


export  const loadMoreBook = () => async (dispatch, getState) => {
    const offset = getRenderedBookLength(getState())

    dispatch({type: LOAD_MORE_BOOK_START})

    try {
        const  book = await  loadMoreBookApi({offset})
        dispatch({
            type: LOAD_MORE_BOOK_SUCCESS,
            payload: book
        })
    }catch (err) {
        dispatch({
            type: LOAD_MORE_BOOK_FAILURE,
            payload: err,
            error: true

        })
    }
}

export const fetchBooksById = (id) => async dispatch => {
    dispatch({type: FETCH_BOOKS_BY_ID_START})

    try {
      const  books = await fetchBooksByIdApi(id)

        dispatch({
            type:FETCH_BOOKS_BY_ID_SUCCESS,
            payload: books
        })
    } catch (err) {
        dispatch({
            type: FETCH_BOOKS_BY_ID_FAILURE,
            payload: err,
            error: true
        })

    }
}